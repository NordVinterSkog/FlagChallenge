{"version":3,"sources":["img/africa.png","img/america.png","img/australia.png","img/asia.png","img/europe.png","img/world.png","img/earth.png","SelectScreen.js","Answers.js","GameModeSelect.js","Timer.js","IntroScreen.js","GameOverScreen.js","App.js","index.js"],"names":["module","exports","SelectScreen","props","className","id","onClick","selectWorldPart","bind","src","europe","alt","africa","asia","america","australia","world","Answers","console","log","answers","map","answer","pickAnswer","value","key","startOver","GameModeSelect","startGame","Timer","state","time","countdown","setInterval","setState","this","timeout","clearInterval","Component","IntroScreen","GameOverScreen","correctAnswers","name","flag","finalScore","App","ready","database","correctAnswer","index","result","points","round","howManyFlags","loaded","shuffle","a","i","length","j","Math","floor","random","e","target","fetch","then","results","json","data","filter","country","timer","renderAnswers","push","timeOut","splice","randomIndex","introEnd","setTimeout","Number","earth","href","title","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.deb3c3d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/africa.a32a5437.png\";","module.exports = __webpack_public_path__ + \"static/media/america.45571595.png\";","module.exports = __webpack_public_path__ + \"static/media/australia.2bd56f28.png\";","module.exports = __webpack_public_path__ + \"static/media/asia.798a84b5.png\";","module.exports = __webpack_public_path__ + \"static/media/europe.921bbe36.png\";","module.exports = __webpack_public_path__ + \"static/media/world.aacbc63c.png\";","module.exports = __webpack_public_path__ + \"static/media/earth.6703263a.png\";","import React from \"react\";\r\nimport africa from \"./img/africa.png\";\r\nimport america from \"./img/america.png\";\r\nimport australia from \"./img/australia.png\";\r\nimport asia from \"./img/asia.png\";\r\nimport europe from \"./img/europe.png\";\r\nimport world from \"./img/world.png\";\r\nimport \"./SelectScreen.css\";\r\n\r\nconst SelectScreen = props => {\r\n  return (\r\n    <div className=\"selectScreen\">\r\n      <h1>Choose a category!</h1>\r\n      <button id=\"Europe\" onClick={props.selectWorldPart.bind(this)}>\r\n        Europe\r\n        <img src={europe} alt=\"europe\" id=\"Europe\" />\r\n      </button>\r\n      <button id=\"Africa\" onClick={props.selectWorldPart}>\r\n        Africa <img src={africa} id=\"Africa\" alt=\"\" />\r\n      </button>\r\n      <button id=\"Asia\" onClick={props.selectWorldPart}>\r\n        Asia\r\n        <img src={asia} id=\"Asia\" alt=\"\" />\r\n      </button>\r\n      <button id=\"Americas\" onClick={props.selectWorldPart}>\r\n        Americas\r\n        <img src={america} id=\"Americas\" alt=\"\" />\r\n      </button>\r\n      <button id=\"Oceania\" onClick={props.selectWorldPart}>\r\n        Oceania\r\n        <img src={australia} id=\"Oceania\" alt=\"\" />\r\n      </button>\r\n      <button id=\"world\" onClick={props.selectWorldPart}>\r\n        World\r\n        <img src={world} id=\"world\" alt=\"\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectScreen;\r\n","import React from \"react\";\r\n\r\nconst Answers = props => {\r\n  console.log(props.answers);\r\n  let answers = props.answers.map(answer => (\r\n    <button onClick={props.pickAnswer} value={answer} key={answer}>\r\n      {answer}\r\n    </button>\r\n  ));\r\n  return (\r\n    <div className=\"rightPanel\">\r\n      {answers}\r\n      <button className=\"back\" onClick={props.startOver}>\r\n        Back\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Answers;\r\n","import React from \"react\";\r\nimport \"./GameModeSelect.css\";\r\n\r\nconst GameModeSelect = props => {\r\n  return (\r\n    <div className=\"gameLenghtSelect\">\r\n      <button className=\"back\" onClick={props.startOver}>\r\n        Back\r\n      </button>\r\n      <h1>Choose game mode.</h1>\r\n      <div className=\"buttons\">\r\n        <button value={5} onClick={props.startGame}>\r\n          Short\r\n        </button>\r\n        <button value={20} onClick={props.startGame}>\r\n          Long\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameModeSelect;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Timer extends Component {\r\n  state = {\r\n    time: this.props.time\r\n  };\r\n\r\n  countdown = setInterval(() => {\r\n    this.setState({\r\n      time: this.state.time - 1\r\n    });\r\n  }, 1000);\r\n\r\n  render() {\r\n    if (this.state.time <= 0) {\r\n      this.props.timeout(this.state.time);\r\n      console.log(this.state.time);\r\n      clearInterval(this.countdown);\r\n      return null;\r\n    } else return <h1>{this.state.time} seconds left.</h1>;\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport \"./IntroScreen.css\";\r\n\r\nconst IntroScreen = props => {\r\n  return (\r\n    <div className=\"introScreen\">\r\n      <h1 className=\"title\">FLAG CHALLENGE</h1>{\" \"}\r\n      <p className=\"Nor\">by NordVinterSkog</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IntroScreen;\r\n","import React from \"react\";\r\nimport \"./GameOver.css\";\r\n\r\nconst GameOverScreen = props => {\r\n  let correctAnswers = props.correctAnswers.map(answer => (\r\n    <div className=\"correctAnswer\" key={answer.name}>\r\n      <img src={answer.flag} alt=\"\" />\r\n      {answer.name}\r\n    </div>\r\n  ));\r\n  return (\r\n    <div className=\"gameOver\">\r\n      <div className=\"results\">\r\n        <div>Game over.</div>\r\n        <div>Score: {props.finalScore}%</div>\r\n        <button onClick={props.startOver}>Start over.</button>\r\n      </div>\r\n\r\n      <div className=\"correctAnswers\">{correctAnswers}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOverScreen;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport SelectScreen from \"./SelectScreen\";\nimport Answers from \"./Answers\";\nimport GameModeSelect from \"./GameModeSelect\";\nimport Timer from \"./Timer\";\nimport IntroScreen from \"./IntroScreen\";\nimport earth from \"./img/earth.png\";\nimport GameOverScreen from \"./GameOverScreen\";\n\nclass App extends Component {\n  state = {\n    ready: false,\n    database: \"\",\n    answers: [],\n    correctAnswer: \"\",\n    correctAnswers: [],\n    index: 0,\n    result: \"\",\n    points: 0,\n    round: 0,\n    time: \"\",\n    howManyFlags: \"\",\n    timeout: false,\n    loaded: false\n  };\n  shuffle = a => {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  };\n  selectWorldPart = e => {\n    console.log(e.target.id);\n    if (e.target.id !== \"world\") {\n      console.log(e.target.id);\n      fetch(`https://restcountries.eu/rest/v2/region/${e.target.id}?fields=name;flag\n    `)\n        .then(results => {\n          return results.json();\n        })\n        .then(data => {\n          let database = data;\n          this.shuffle(database);\n\n          /// so it doesn't cause confusion with Norway\n\n          database = database.filter(\n            country => country.name !== \"Svalbard and Jan Mayen\"\n          );\n          this.setState({ database });\n          console.log(this.state.database);\n          console.log(this.state.ready);\n        });\n      return;\n    } else {\n    }\n    fetch(`https://restcountries.eu/rest/v2/all?fields=name;flag`)\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        let database = data;\n        this.shuffle(database);\n        this.setState({ database });\n        console.log(this.state.database);\n      });\n  };\n\n  startOver = () => {\n    this.setState({\n      ready: false,\n      database: \"\",\n      answers: [],\n      correctAnswer: \"\",\n      correctAnswers: [],\n      index: 0,\n      result: \"\",\n      points: 0,\n      round: 0,\n      time: \"\",\n      howManyFlags: \"\",\n      timeout: false\n    });\n  };\n\n  startGame = e => {\n    console.log(e.target.value);\n    this.setState({\n      ready: true,\n      howManyFlags: e.target.value,\n      time: e.target.value * 4,\n      timer: e.target.value * 4\n    });\n    this.renderAnswers();\n  };\n\n  pickAnswer = e => {\n    console.log(e.target.value);\n    let result =\n      e.target.value === this.state.correctAnswer.name\n        ? \"Good!\"\n        : `Wrong! It's ${this.state.correctAnswer.name}!`;\n    let points = this.state.points;\n    if (e.target.value === this.state.correctAnswer.name) {\n      points++;\n    }\n\n    let correctAnswers = this.state.correctAnswers;\n    correctAnswers.push(this.state.correctAnswer);\n\n    this.setState({\n      result,\n      points,\n      correctAnswers\n    });\n    this.renderAnswers();\n  };\n\n  timeOut = () => {\n    this.setState({\n      timeout: true\n    });\n  };\n\n  renderAnswers = () => {\n    let round = this.state.round;\n    let index = this.state.index;\n    let database = [...this.state.database];\n    let correctAnswer = database[index];\n    console.log(database);\n\n    let answers = [];\n\n    database.splice(index, 1);\n    for (let i = 0; i < 3; i++) {\n      let randomIndex = Math.floor(Math.random() * database.length);\n      let answer = database[randomIndex].name;\n\n      database.splice(randomIndex, 1);\n      answers.push(answer);\n    }\n    answers.push(correctAnswer.name);\n    this.shuffle(answers);\n    console.log(database);\n    console.log(this.state.database);\n    index++;\n    round++;\n    this.setState({\n      answers,\n      correctAnswer,\n      round,\n      index\n    });\n  };\n\n  introEnd = setTimeout(() => {\n    this.setState({\n      loaded: true\n    });\n  }, 2500);\n\n  render() {\n    console.log(this.state.correctAnswers);\n    let finalScore = Math.floor(\n      (Number(this.state.points) / Number(this.state.howManyFlags)) * 100\n    );\n\n    return (\n      <wrapper>\n        <img className=\"globe\" src={earth} alt=\"\" />\n        {this.state.loaded ? (\n          <>\n            <div className=\"mainScreen\">\n              {this.state.database.length >= 1 ? (\n                this.state.ready ? (\n                  this.state.round > this.state.howManyFlags ||\n                  this.state.timeout ? (\n                    //GAME OVER SCREEN\n\n                    <GameOverScreen\n                      startOver={this.startOver}\n                      finalScore={finalScore}\n                      correctAnswers={this.state.correctAnswers}\n                    />\n                  ) : (\n                    //MAIN GAME SCREEN\n\n                    <div className=\"game\">\n                      <div className=\"leftPanel\">\n                        {\" \"}\n                        <h1>\n                          ({this.state.round}/{this.state.howManyFlags}) Match a\n                          country.\n                        </h1>\n                        <img src={this.state.correctAnswer.flag} alt=\"\" />\n                        <Timer time={this.state.time} timeout={this.timeOut} />\n                        <div>{this.state.result}</div>\n                      </div>{\" \"}\n                      <Answers\n                        answers={this.state.answers}\n                        pickAnswer={this.pickAnswer}\n                        startOver={this.startOver}\n                      />\n                    </div>\n                  )\n                ) : (\n                  <GameModeSelect\n                    startGame={this.startGame}\n                    startOver={this.startOver}\n                  />\n                )\n              ) : (\n                <SelectScreen\n                  selectWorldPart={this.selectWorldPart}\n                  renderAnswers={this.renderAnswers}\n                />\n              )}\n            </div>\n            <footer>\n              <div>\n                Icons made by{\" \"}\n                <a\n                  href=\"https://www.flaticon.com/authors/freepik\"\n                  title=\"Freepik\"\n                >\n                  Freepik\n                </a>{\" \"}\n                from{\" \"}\n                <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n                  www.flaticon.com\n                </a>\n              </div>\n            </footer>\n          </>\n        ) : (\n          <IntroScreen />\n        )}\n      </wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}